@page "/ShowCredentialsFromContext"
@using System.Security.Claims

<h3>Your Account Information</h3>
<p>View and edit your account information on this page.</p>

<AuthorizeView>
    <Authorized>
        <div class="user-info">
            <h4>Hello, @name</h4>
            <p>Your role: @userClaims?.First(claim => claim.Type.Equals(ClaimTypes.Role)).Value</p>
            
            @if (userClaims?.Any() ?? false)
            {
                <p>Your claims include:</p>
                <ul>
                    @foreach (Claim claim in userClaims)
                    {
                        <li>
                            <label>@claim.Type: @claim.Value</label>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No claims found for your account.</p>
            }
        </div>
    </Authorized>
    <NotAuthorized>
        <p>You are not logged in.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    private string? name;
    private IEnumerable<Claim>? userClaims;
    private bool isLoggedIn;

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthState;
        ClaimsPrincipal user = authState.User;
        isLoggedIn = user.Identity != null;

        if (isLoggedIn)
        {
            userClaims = user.Claims;
            name = user.Identity!.Name!;
        }
    }
}

<style>
    /* Add custom styles for better appearance */
    .user-info {
        background-color: #f8f9fa;
        padding: 15px;
        border: 1px solid #dee2e6;
        border-radius: 5px;
        margin-top: 20px;
    }

    ul {
        padding-left: 20px;
    }
</style>